# Generated with protoc-gen-openapi
# https://github.com/google/gnostic/tree/master/apps/protoc-gen-openapi

openapi: 3.0.3
info:
  title: ''
  version: 0.0.1
paths:
  /v2/dataset:
    get:
      tags:
      - DatasetService
      description: This endpoint gets the latest version of the dataset
      operationId: DatasetService_GetLatestDataset
      responses:
        '200':
          description: OK
          content:
            application/x-protobuf:
              schema:
                $ref: '#/components/schemas/GetLatestDatasetResponse'
  /v2/poi:
    get:
      tags:
      - POIService
      description: This endpoint gets the Points of interest
      operationId: POIService_GetPOIs
      responses:
        '200':
          description: OK
          content:
            application/x-protobuf:
              schema:
                $ref: '#/components/schemas/GetPOIsResponse'
  /v2/poi/{poi}:
    get:
      tags:
      - POIService
      description: This endpoint gets a specific Point of Interest
      operationId: POIService_GetPOI
      parameters:
      - name: poi
        in: path
        description: The poi id.
        required: true
        schema:
          type: string
      responses:
        '200':
          description: OK
          content:
            application/x-protobuf:
              schema:
                $ref: '#/components/schemas/POI'
  /v2/routes:
    get:
      tags:
      - RoutesService
      description: This endpoint gets all routes
      operationId: RoutesService_GetRoutes
      responses:
        '200':
          description: OK
          content:
            application/x-protobuf:
              schema:
                $ref: '#/components/schemas/GetRoutesResponse'
  /v2/routes/{route}:
    get:
      tags:
      - RoutesService
      description: This endpoint gets a specific route
      operationId: RoutesService_GetRoute
      parameters:
      - name: route
        in: path
        description: The route id.
        required: true
        schema:
          type: string
      responses:
        '200':
          description: OK
          content:
            application/x-protobuf:
              schema:
                $ref: '#/components/schemas/Route'
  /v2/trip:
    get:
      tags:
      - TripsService
      description: This endpoint gets all trips of a given user
      operationId: TripsService_GetTrips
      responses:
        '200':
          description: OK
          content:
            application/x-protobuf:
              schema:
                $ref: '#/components/schemas/GetTripsResponse'
    post:
      tags:
      - TripsService
      description: This endpoint creates a new trip or updates it if it already exists
      operationId: TripsService_CreateOrUpdate
      requestBody:
        content:
          application/x-protobuf:
            schema:
              $ref: '#/components/schemas/Trip'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/x-protobuf:
              schema:
                $ref: '#/components/schemas/CreateOrUpdateTripResponse'
  /v2/trip/{trip}:
    get:
      tags:
      - TripsService
      description: This endpoint gets a specific trip
      operationId: TripsService_GetTrip
      parameters:
      - name: trip
        in: path
        description: The trip id.
        required: true
        schema:
          type: string
      responses:
        '200':
          description: OK
          content:
            application/x-protobuf:
              schema:
                $ref: '#/components/schemas/Trip'
  /v2/user/signin:
    post:
      tags:
      - UserService
      description: This endpoint logs a user in
      operationId: UserService_SignIn
      requestBody:
        content:
          application/x-protobuf:
            schema:
              $ref: '#/components/schemas/Credentials'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/x-protobuf:
              schema:
                $ref: '#/components/schemas/Authorization'
  /v2/user/signup:
    post:
      tags:
      - UserService
      description: This endpoint registers a user
      operationId: UserService_SignUp
      requestBody:
        content:
          application/x-protobuf:
            schema:
              $ref: '#/components/schemas/Credentials'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/x-protobuf:
              schema:
                $ref: '#/components/schemas/Authorization'
  /v2/wifiap:
    get:
      tags:
      - WiFiAPService
      description: The endpoint gets all WiFi access points
      operationId: WiFiAPService_GetWiFiAPs
      responses:
        '200':
          description: OK
          content:
            application/x-protobuf:
              schema:
                $ref: '#/components/schemas/GetWiFiAPsResponse'
  /v2/wifiap/{wifiap}:
    get:
      tags:
      - WiFiAPService
      description: This endpoint gets a specific WiFi access point
      operationId: WiFiAPService_GetWiFiAP
      parameters:
      - name: wifiap
        in: path
        description: The wifiap id.
        required: true
        schema:
          type: string
      responses:
        '200':
          description: OK
          content:
            application/x-protobuf:
              schema:
                $ref: '#/components/schemas/WiFiAP'
components:
  schemas:
    Any:
      type: object
      properties:
        typeUrl:
          type: string
          description: "A URL/resource name that uniquely identifies the type of the\
            \ serialized protocol buffer message. The last segment of the URL's path\
            \ must represent the fully qualified name of the type (as in `path/google.protobuf.Duration`).\
            \ The name should be in a canonical form (e.g., leading \".\" is not accepted).\
            \ In practice, teams usually precompile into the binary all types that\
            \ they expect it to use in the context of Any. However, for URLs which\
            \ use the scheme `http`, `https`, or no scheme, one can optionally set\
            \ up a type server that maps type URLs to message definitions as follows:\
            \ * If no scheme is provided, `https` is assumed. * An HTTP GET on the\
            \ URL must yield a [google.protobuf.Type][]   value in binary format,\
            \ or produce an error. * Applications are allowed to cache lookup results\
            \ based on the   URL, or have them precompiled into a binary to avoid\
            \ any   lookup. Therefore, binary compatibility needs to be preserved\
            \   on changes to types. (Use versioned type names to manage   breaking\
            \ changes.) Note: this functionality is not currently available in the\
            \ official protobuf release, and it is not used for type URLs beginning\
            \ with type.googleapis.com. Schemes other than `http`, `https` (or the\
            \ empty scheme) might be used with implementation specific semantics."
        value:
          type: string
          description: Must be a valid serialized protocol buffer of the above specified
            type.
          format: bytes
      description: "`Any` contains an arbitrary serialized protocol buffer message\
        \ along with a URL that describes the type of the serialized message. Protobuf\
        \ library provides support to pack/unpack Any values in the form of utility\
        \ functions or additional generated methods of the Any type. Example 1: Pack\
        \ and unpack a message in C++.     Foo foo = ...;     Any any;     any.PackFrom(foo);\
        \     ...     if (any.UnpackTo(&foo)) {       ...     } Example 2: Pack and\
        \ unpack a message in Java.     Foo foo = ...;     Any any = Any.pack(foo);\
        \     ...     if (any.is(Foo.class)) {       foo = any.unpack(Foo.class);\
        \     }  Example 3: Pack and unpack a message in Python.     foo = Foo(...)\
        \     any = Any()     any.Pack(foo)     ...     if any.Is(Foo.DESCRIPTOR):\
        \       any.Unpack(foo)       ...  Example 4: Pack and unpack a message in\
        \ Go      foo := &pb.Foo{...}      any, err := ptypes.MarshalAny(foo)    \
        \  ...      foo := &pb.Foo{}      if err := ptypes.UnmarshalAny(any, foo);\
        \ err != nil {        ...      } The pack methods provided by protobuf library\
        \ will by default use 'type.googleapis.com/full.type.name' as the type URL\
        \ and the unpack methods only use the fully qualified type name after the\
        \ last '/' in the type URL, for example \"foo.bar.com/x/y.z\" will yield type\
        \ name \"y.z\". JSON ==== The JSON representation of an `Any` value uses the\
        \ regular representation of the deserialized, embedded message, with an additional\
        \ field `@type` which contains the type URL. Example:     package google.profile;\
        \     message Person {       string first_name = 1;       string last_name\
        \ = 2;     }     {       \"@type\": \"type.googleapis.com/google.profile.Person\"\
        ,       \"firstName\": <string>,       \"lastName\": <string>     } If the\
        \ embedded message type is well-known and has a custom JSON representation,\
        \ that representation will be embedded adding a field `value` which holds\
        \ the custom JSON in addition to the `@type` field. Example (for message [google.protobuf.Duration][]):\
        \     {       \"@type\": \"type.googleapis.com/google.protobuf.Duration\"\
        ,       \"value\": \"1.212s\"     }"
    Authorization:
      type: object
      properties:
        jwt:
          type: string
    CreateOrUpdateTripResponse:
      type: object
      properties:
        visitVerificationStatus:
          type: object
          additionalProperties:
            type: integer
            format: enum
        completedTrip:
          type: boolean
    Credentials:
      type: object
      properties:
        username:
          type: string
        password:
          type: string
        cryptoIdentity:
          $ref: '#/components/schemas/CryptoIdentity'
    CryptoIdentity:
      type: object
      properties:
        sessionId:
          type: string
        publicKey:
          type: string
          format: bytes
    Endorsement:
      type: object
      properties:
        encryptedSignedEndorsementPayload:
          type: string
          format: bytes
    EpochTime:
      type: object
      properties:
        epochId:
          type: string
        timeValue:
          type: integer
          format: int64
        timeUnit:
          type: string
      description: Epoch time
    GetLatestDatasetResponse:
      type: object
      properties:
        version:
          type: string
    GetPOIsResponse:
      type: object
      properties:
        POIs:
          type: array
          items:
            $ref: '#/components/schemas/POI'
    GetRoutesResponse:
      type: object
      properties:
        routes:
          type: array
          items:
            $ref: '#/components/schemas/Route'
    GetTripsResponse:
      type: object
      properties:
        trips:
          type: array
          items:
            $ref: '#/components/schemas/Trip'
    GetWiFiAPsResponse:
      type: object
      properties:
        wiFiAPs:
          type: array
          items:
            $ref: '#/components/schemas/WiFiAP'
    LatLng:
      type: object
      properties:
        latitude:
          type: number
          description: The latitude in degrees. It must be in the range [-90.0, +90.0].
          format: double
        longitude:
          type: number
          description: The longitude in degrees. It must be in the range [-180.0,
            +180.0].
          format: double
      description: An object that represents a latitude/longitude pair. This is expressed
        as a pair of doubles to represent degrees latitude and degrees longitude.
        Unless specified otherwise, this must conform to the <a href="http://www.unoosa.org/pdf/icg/2012/template/WGS_84.pdf">WGS84
        standard</a>. Values must be within normalized ranges.
    LocalizedText:
      type: object
      properties:
        text:
          type: string
          description: Localized string in the language corresponding to `language_code'
            below.
        languageCode:
          type: string
          description: The text's BCP-47 language code, such as "en-US" or "sr-Latn".
            For more information, see http://www.unicode.org/reports/tr35/#Unicode_locale_identifier.
      description: Localized variant of a text in a particular language.
    Location:
      type: object
      properties:
        poi:
          $ref: '#/components/schemas/PoI'
    LocationClaim:
      type: object
      properties:
        claimId:
          type: string
          description: unique identifier for claim
        proverId:
          type: string
          description: prover unique id - can also be a pseudonym
        location:
          $ref: '#/components/schemas/Location'
        time:
          $ref: '#/components/schemas/Time'
        evidenceType:
          type: string
          description: type of the evidence that supports the claim - fully-qualified
            protobuf message name
        evidence:
          $ref: '#/components/schemas/VisitEvidences'
      description: definition of the location claim
    OLC:
      type: object
      properties:
        southLatitude:
          type: number
          format: double
        westLongitude:
          type: number
          format: double
        northLatitude:
          type: number
          format: double
        eastLongitude:
          type: number
          format: double
        length:
          type: integer
          format: int32
      description: 'Open Location Codes reference: https://github.com/google/open-location-code/blob/1796878d947c6e281e383e69bbd0821f82db9566/java/src/main/java/com/google/openlocationcode/OpenLocationCode.java#L106'
    POI:
      type: object
      properties:
        id:
          type: string
        worldCoord:
          type: array
          items:
            type: number
            format: double
        webURL:
          type: string
        imageURL:
          type: string
        mainLocale:
          type: string
        names:
          type: object
          additionalProperties:
            type: string
        descriptions:
          type: object
          additionalProperties:
            type: string
    PeerEvidence:
      type: object
      properties:
        peerEndorsements:
          type: array
          items:
            $ref: '#/components/schemas/Endorsement'
    PoI:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        localizedName:
          type: array
          items:
            $ref: '#/components/schemas/LocalizedText'
      description: Point-of-Interest (PoI) location
    PoIProximity:
      type: object
      properties:
        poiId:
          type: string
        distanceValue:
          type: integer
          format: uint64
        distanceUnit:
          type: string
      description: Point-of-Interest proximity location
    Route:
      type: object
      properties:
        id:
          type: string
        waypoints:
          type: array
          items:
            $ref: '#/components/schemas/Waypoint'
        imageURL:
          type: string
        mainLocale:
          type: string
        names:
          type: object
          additionalProperties:
            type: string
        descriptions:
          type: object
          additionalProperties:
            type: string
    Time:
      type: object
      properties:
        interval:
          $ref: '#/components/schemas/TimeInterval'
    TimeInterval:
      type: object
      properties:
        begin:
          type: string
          format: RFC3339
        end:
          type: string
          format: RFC3339
      description: Time interval
    Trip:
      type: object
      properties:
        id:
          type: string
        routeId:
          type: string
        locationClaims:
          type: array
          items:
            $ref: '#/components/schemas/LocationClaim'
    VisitEvidence:
      type: object
      properties:
        wiFiAPEvidence:
          $ref: '#/components/schemas/WiFiAPEvidence'
        peerEvidence:
          $ref: '#/components/schemas/PeerEvidence'
    VisitEvidences:
      type: object
      properties:
        evidences:
          type: array
          items:
            $ref: '#/components/schemas/VisitEvidence'
      description: CROSS-Specific Evidence Schemas
    Waypoint:
      type: object
      properties:
        id:
          type: string
        poiId:
          type: string
        stayForSeconds:
          type: integer
          format: int32
    WiFiAP:
      type: object
      properties:
        bssid:
          type: string
        type:
          type: string
    WiFiAPEvidence:
      type: object
      properties:
        bssid:
          type: string
        ssid:
          type: string
        sightingMillis:
          type: integer
          format: int64
tags:
- name: DatasetService
- name: POIService
- name: RoutesService
- name: TripsService
- name: UserService
- name: WiFiAPService
